tasks.withType(JavaCompile) {
options.encoding = "UTF-8"
}
buildscript {
    ext {
        springBootVersion = '1.2.0.RELEASE'
    }
    repositories {
        mavenLocal()
        //mavenCentral()
        maven { url "http://172.16.1.26:4444/nexus/content/groups/public/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }

}

apply plugin: 'spring-boot'

jar {
//    baseName = 'module1'
//    archiveName = "${baseName}.jar"
    version = new File("${projectDir}/src/main/resources/version.txt").text.trim()
}

run {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=y']
}

// Toggle to enable building WAR
// -----------------------------
def buildWar = false
//def buildWar = true
apply plugin: 'war'
war {
    archiveName = "mo_quartz.war"
}
// -----------------------------


dependencies {

     compile project(":mo_common")

    // Core
    // ====
    // Spring Boot
    compile("org.springframework.boot:spring-boot-starter-web") { 
    exclude module: 'spring-boot-starter-tomcat' 
    exclude module: 'log4j-over-slf4j'
    exclude module: 'logback-core'
    exclude module: 'logback-classic'
    }
    
    compile("org.springframework:spring-context-support") { 
    exclude module: 'log4j-over-slf4j'
    exclude module: 'logback-core'
    exclude module: 'logback-classic'
    }
    
    if (!buildWar) {
        compile ("org.springframework.boot:spring-boot-starter-jetty")
    }
    
    compile ("org.springframework.boot:spring-boot-starter-security"){
      exclude module: 'log4j-over-slf4j'
      exclude module: 'logback-core'
      exclude module: 'logback-classic'  
    }
    compile("org.springframework.boot:spring-boot-starter-actuator") {
      exclude module: 'hsqldb' 
      exclude module: 'log4j-over-slf4j'
      exclude module: 'logback-core'
      exclude module: 'logback-classic'
    }
    compile ("org.springframework.boot:spring-boot-starter-data-jpa"){
      exclude module: 'log4j-over-slf4j'
      exclude module: 'logback-core'
      exclude module: 'logback-classic'
    }
    compile ("org.hsqldb:hsqldb"){
      exclude module: 'log4j-over-slf4j'
      exclude module: 'logback-core'
      exclude module: 'logback-classic'   
    } 
    compile ("mysql:mysql-connector-java:5.1.34"){
      exclude module: 'log4j-over-slf4j'
      exclude module: 'logback-core'
      exclude module: 'logback-classic'
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    
    // Bean Validation
    compile ("org.hibernate:hibernate-validator:$hibernateValidatorVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    // Jetty Server
    compile ("org.eclipse.jetty:jetty-servlets:$jettyVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }

    //Spring redis support
    compile ("org.springframework.boot:spring-boot-starter-redis"){ 
	    exclude module: 'spring-boot-starter-tomcat' 
	    exclude module: 'log4j-over-slf4j'
	    exclude module: 'logback-core'
	    exclude module: 'logback-classic'
    }

    if (!buildWar) {
        compile "org.eclipse.jetty:jetty-client:$jettyVersion"
        compile "org.eclipse.jetty:jetty-continuation:$jettyVersion"
        compile "org.eclipse.jetty:jetty-http:$jettyVersion"
        compile "org.eclipse.jetty:jetty-io:$jettyVersion"
        compile "org.eclipse.jetty:jetty-jsp:$jettyVersion"
        compile "org.eclipse.jetty:jetty-security:$jettyVersion"
        compile "org.eclipse.jetty:jetty-server:$jettyVersion"
        compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
        compile "org.eclipse.jetty:jetty-util:$jettyVersion"
        compile "org.eclipse.jetty:jetty-webapp:$jettyVersion"
        compile "org.eclipse.jetty:jetty-xml:$jettyVersion"
        // Servlet API
        compile "javax.servlet:javax.servlet-api:$servletApiVersion"
    } else {
        providedCompile ("javax.servlet:javax.servlet-api:$servletApiVersion") {
            transitive = false
        }
    }
    // JAX-RS REST
    compile ("org.glassfish.hk2:spring-bridge:$springHk2BridgeVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    compile ("org.glassfish.jersey.core:jersey-server:$jerseyVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    compile ("org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"){
      exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    compile ("org.glassfish.jersey.ext:jersey-bean-validation:$jerseyVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    // Apache HTTP Client
    compile "org.glassfish.jersey.connectors:jersey-apache-connector:$jerseyVersion"
    // Jackson JSON
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    // Swagger Docs
    compile("com.wordnik:swagger-jaxrs_2.10:$swaggerVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    compile("com.wordnik:swagger-core_2.10:$swaggerVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    // Coda Hale Metrics
    compile ("com.codahale.metrics:metrics-core:$metricsVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    // MyBatis
    compile ("org.mybatis:mybatis:$mybatisVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }
    compile ("org.mybatis:mybatis-spring:$mybatisSpringVersion"){
     exclude module: 'log4j-over-slf4j'
     exclude module: 'logback-core'
     exclude module: 'logback-classic'
    }

    // Utilities
    // =========
    //compile "org.projectlombok:lombok:$lombokVersion"
    compile "com.google.guava:guava:$guavaVersion"
    

    // Testing
    // =======
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.easytesting:fest-assert:$festAssertVersion"
    
    //log4j2
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.1"
   	//compile "org.apache.logging.log4j:log4j-to-slf4j:2.1"
  	compile "org.apache.logging.log4j:log4j-core:2.1"
  	
  	compile "com.tfc:word-search:1.1"
  	
  	compile "org.quartz-scheduler:quartz:2.2.1"
  	
  	
}

